# Day 16: Flawed Frequency Transmission

# Input signal: 12345678
# base pattern: 0, 1, 0, -1

start = '59717238168580010599012527510943149347930742822899638247083005855483867484356055489419913512721095561655265107745972739464268846374728393507509840854109803718802780543298141398644955506149914796775885246602123746866223528356493012136152974218720542297275145465188153752865061822191530129420866198952553101979463026278788735726652297857883278524565751999458902550203666358043355816162788135488915722989560163456057551268306318085020948544474108340969874943659788076333934419729831896081431886621996610143785624166789772013707177940150230042563041915624525900826097730790562543352690091653041839771125119162154625459654861922989186784414455453132011498'


def phase(input_string):
    input_signal = [int(c) for c in input_string]
    size = len(input_signal)
    output = []
    for n in range(size):
        pos = sum(num for c in range(n+1) for num in input_signal[n+c::4*(n+1)])
        neg = sum(num for c in range(n+1) for num in input_signal[n+(n+1)*2+c::4*(n+1)])
        output.append(pos-neg)

    return ''.join(str(c)[-1] for c in output)

part_1 = start
for _ in range(100):
    part_1 = phase(part_1)

print(part_1[:8]) # 58672132
